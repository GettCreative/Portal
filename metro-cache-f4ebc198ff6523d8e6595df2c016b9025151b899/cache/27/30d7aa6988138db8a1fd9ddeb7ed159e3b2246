__d(function (global, _require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react2 = _require(_dependencyMap[0], "react");

  var _react3 = _interopRequireDefault(_react2);

  var _index = _require(_dependencyMap[1], "./../../../react-transform-hmr/lib/index.js");

  var _index2 = _interopRequireDefault(_index);

  var _jsxFileName = "/home/nooreddein/Desktop/Portal/node_modules/react-native-maps/lib/components/MapOverlay.js";

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _propTypes = _require(_dependencyMap[2], "prop-types");

  var _propTypes2 = _interopRequireDefault(_propTypes);

  var _reactNative = _require(_dependencyMap[3], "react-native");

  var _resolveAssetSource = _require(_dependencyMap[4], "react-native/Libraries/Image/resolveAssetSource");

  var _resolveAssetSource2 = _interopRequireDefault(_resolveAssetSource);

  var _decorateMapComponent = _require(_dependencyMap[5], "./decorateMapComponent");

  var _decorateMapComponent2 = _interopRequireDefault(_decorateMapComponent);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  var _components = {
    MapOverlay: {
      displayName: "MapOverlay"
    }
  };

  var _reactTransformHmrLibIndexJs2 = (0, _index2.default)({
    filename: "/home/nooreddein/Desktop/Portal/node_modules/react-native-maps/lib/components/MapOverlay.js",
    components: _components,
    locals: [module],
    imports: [_react3.default]
  });

  function _wrapComponent(id) {
    return function (Component) {
      return _reactTransformHmrLibIndexJs2(Component, id);
    };
  }

  var viewConfig = {
    uiViewClassName: 'AIR<provider>MapOverlay',
    validAttributes: {
      image: true
    }
  };

  var propTypes = _extends({}, _reactNative.View.propTypes, {
    image: _propTypes2.default.any.isRequired,
    bounds: _propTypes2.default.arrayOf(_propTypes2.default.array.isRequired).isRequired
  });

  var MapOverlay = _wrapComponent("MapOverlay")(function (_Component) {
    _inherits(MapOverlay, _Component);

    function MapOverlay() {
      _classCallCheck(this, MapOverlay);

      return _possibleConstructorReturn(this, (MapOverlay.__proto__ || Object.getPrototypeOf(MapOverlay)).apply(this, arguments));
    }

    _createClass(MapOverlay, [{
      key: "render",
      value: function render() {
        var image = void 0;

        if (this.props.image) {
          if (typeof this.props.image.startsWith === 'function' && this.props.image.startsWith('http')) {
            image = this.props.image;
          } else {
            image = (0, _resolveAssetSource2.default)(this.props.image) || {};
            image = image.uri;
          }
        }

        var AIRMapOverlay = this.getAirComponent();
        return _react3.default.createElement(AIRMapOverlay, _extends({}, this.props, {
          image: image,
          style: [styles.overlay, this.props.style],
          __source: {
            fileName: _jsxFileName,
            lineNumber: 47
          }
        }));
      }
    }]);

    return MapOverlay;
  }(_react2.Component));

  MapOverlay.propTypes = propTypes;
  MapOverlay.viewConfig = viewConfig;

  var styles = _reactNative.StyleSheet.create({
    overlay: {
      position: 'absolute',
      backgroundColor: 'transparent'
    }
  });

  MapOverlay.Animated = _reactNative.Animated.createAnimatedComponent(MapOverlay);
  exports.default = (0, _decorateMapComponent2.default)(MapOverlay, {
    componentType: 'Overlay',
    providers: {
      google: {
        ios: _decorateMapComponent.SUPPORTED,
        android: _decorateMapComponent.USES_DEFAULT_IMPLEMENTATION
      }
    }
  });
});